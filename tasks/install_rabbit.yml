# Tasks for installing and configuring RabbitMQ and custom plugins on the system

- name: Add RabbitMQ apt repos key (erlang + rabbitmq-server cloudsmith apt repos)
  ansible.builtin.apt_key:
    url: "{{ item }}"
    state: present
  with_items:
    - "https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-erlang/gpg.E495BB49CC4BBE5B.key"
    - "https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-server/gpg.9F4587F226208342.key"

- name: Add RabbitMQ apt repos (erlang + rabbitmq-server cloudsmith apt repos)
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - "deb https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-erlang/deb/ubuntu {{ ansible_distribution_release }} main"
    - "deb-src https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-erlang/deb/ubuntu {{ ansible_distribution_release }} main"
    - "deb https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-server/deb/ubuntu {{ ansible_distribution_release }} main"
    - "deb-src https://dl.cloudsmith.io/public/rabbitmq/rabbitmq-server/deb/ubuntu {{ ansible_distribution_release }} main"

# See https://stackoverflow.com/questions/32407164/the-vm-is-running-with-native-name-encoding-of-latin1-which-may-cause-elixir-to
- name: Make sure LC_ALL locale is set to UTF-8
  ansible.builtin.command:
    cmd: update-locale LC_ALL=en_US.UTF-8

- name: Get hostname for RabbitMQ instance at time of installation
  ansible.builtin.shell:
    cmd: "hostname"
  register: hostname_return

- name: Output collected hostname info
  ansible.builtin.debug:
    var: hostname_return.stdout

- name: Install rabbitmq-server package (from RabbitMQ repo)
  ansible.builtin.apt:
    name: rabbitmq-server
    state: present

- name: Start rabbitmq-server in order to use the rabbitctl command in next task
  ansible.builtin.service:
    name: rabbitmq-server
    state: started

- name: Get RabbitMQ plugins dir
  ansible.builtin.shell:
    cmd: rabbitmqctl environment | grep -A 1 plugins_dir | grep -oE '"/.+"' | cut -d ':' -f 2 | tr -d '"'
  register: rabbit_plugins_dir

- name: Output RabbitMQ plugins path
  ansible.builtin.debug:
    var: rabbit_plugins_dir.stdout

- name: Plugins to install, debug output
  ansible.builtin.debug:
    msg: "files/{{ item }}.ez -> {{ rabbit_plugins_dir.stdout }}"
  with_items: '{{ rabbitmq_custom_plugins }}'

- name: Place custom plugins into the plugins dir
  ansible.builtin.copy:
    src: "{{ item }}.ez"
    dest: "{{ rabbit_plugins_dir.stdout }}"
  with_items: '{{ rabbitmq_custom_plugins }}'

- name: Stop rabbitmq-server to add config file
  ansible.builtin.service:
    name: rabbitmq-server
    state: stopped

- name: Configure rabbitmq-server
  ansible.builtin.template:
    src: rabbitmq.conf.j2
    dest: /etc/rabbitmq/rabbitmq.conf

- name: Start rabbitmq-server to enable plugins and add users
  ansible.builtin.service:
    name: rabbitmq-server
    state: started
    enabled: yes

- name: Enable custom plugins
  community.rabbitmq.rabbitmq_plugin:
    name: "{{ item }}"
    state: enabled
  with_items: '{{ rabbitmq_custom_plugins }}'

- name: Enable management plugin
  community.rabbitmq.rabbitmq_plugin:
    new_only: yes # keeps previously installed plugins
    name: rabbitmq_management
    state: enabled
  when: rabbitmq_manage

- name: Setup rabbitmq user with admin access (providing node name in FQDN/cluster mode)
  community.rabbitmq.rabbitmq_user:
    user: "{{ rabbitmq_default_user }}"
    password: "{{ rabbitmq_default_pass }}"
    vhost: "{{ rabbitmq_default_vhost }}"
    configure_priv: "{{ rabbitmq_configure_priv }}"
    read_priv: "{{ rabbitmq_read_priv }}"
    write_priv: "{{ rabbitmq_write_priv }}"
    tags: "{{ rabbitmq_default_user_tags }}"
    state: "{{ rabbitmq_user_state }}"
    node: "{{ rabbitmq_nodename }}@{{ hostname_return.stdout }}"
  when:
    - rabbitmq_create_user
    - rabbitmq_cluster_bootup_play

- name: Setup rabbitmq user with admin access (no node name, localhost mode)
  community.rabbitmq.rabbitmq_user:
    user: "{{ rabbitmq_default_user }}"
    password: "{{ rabbitmq_default_pass }}"
    vhost: "{{ rabbitmq_default_vhost }}"
    configure_priv: "{{ rabbitmq_configure_priv }}"
    read_priv: "{{ rabbitmq_read_priv }}"
    write_priv: "{{ rabbitmq_write_priv }}"
    tags: "{{ rabbitmq_default_user_tags|join(',') }}"
    state: "{{ rabbitmq_user_state }}"
  when:
    - rabbitmq_create_user
    - not rabbitmq_cluster_bootup_play
