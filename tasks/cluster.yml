---
# Play to prepare instance to install RabbitMQ on itself when bootet. Setting it up for clustering.
# RabbitMQ can't be install prior first boot (on an image) as it messes with system state to make later cluster
# setup impossible as hostname changes on a fresh boot on AWS, so setup can't be on the AMI.


- name: Create Rabbit etc & var dirs manually as we only install Rabbit later
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: 0755
  with_items:
    - /etc/rabbitmq
    - /var/lib/rabbitmq

- name: Add Rabbit ENV config file to make sure full hostnames are used
  ansible.builtin.template:
    src: rabbitmq-env.conf.j2
    dest: /etc/rabbitmq/rabbitmq-env.conf

- name: Ensure erlang cookies are the same among all instances
  ansible.builtin.template:
    src: erlang.cookie.j2
    dest: /var/lib/rabbitmq/.erlang.cookie
    mode: 0400

- name: Install python-pip and other tools to install python packages/ansible
  ansible.builtin.apt:
    name:
      - git-core
      - build-essential
      - python-pip
      # build dependencies to install ansible pip package
      - libyaml-dev
      - libssl-dev
      - libffi-dev
      - python-dev
    state: present

- name: Install Boto & Ansible to run Ansible when instance comes up
  ansible.builtin.pip:
    name:
      - pip
      - jinja2
      - boto
      - boto3
      - cryptography
      - ansible
    state: latest

- name: Clone this role onto remote machine to be executed on boot
  ansible.builtin.git:
    repo: https://github.com/mediafellows/ansible-role-rabbitmq.git
    dest: /root/roles/mediafellows.rabbitmq
    version: master
    recursive: yes
    depth: 5
    accept_hostkey: yes

- name: Create ansible library dir in root folder
  ansible.builtin.file:
    path: /root/library
    state: directory

- name: Put ansible.cfg into root dir to configure ansible library/role dirs
  ansible.builtin.copy:
    src: ansible.cfg
    dest: /root/ansible.cfg

- name: Place playbook using this role into /root
  ansible.builtin.template:
    src: rabbit_bootup.yml.j2
    dest: /root/rabbit_bootup.yml

- name: Check if rc.local is present
  ansible.builtin.stat:
    path: /etc/rc.local
  register: rc_local_state

- name: Make sure rc.local file is actually present before attempting to write into it
  ansible.builtin.file:
    src: rc.local
    dest: /etc/rc.local
    mode: 0755
    owner: root
    state: present
  when: not rc_local_state.exists

- name: Add ansible execution to bootup of instance (hooks intance up to cluster)
  ansible.builtin.lineinfile:
    dest: /etc/rc.local
    insertbefore: 'exit 0'
    line: 'cd /root/ && /usr/local/bin/ansible-playbook rabbit_bootup.yml >> /var/log/rc.local.log 2>&1'

